defaults: &defaults
  working_directory: ~/repo

version: 2
jobs:
  ios-build:
    macos:
      xcode: "8.3.3"
    environment:
      BASH_ENV: "~/.nvm/nvm.sh"
    steps:
      - checkout
      - run:
          name: Install Node 8
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash
            source ~/.nvm/nvm.sh
            # https://github.com/creationix/nvm/issues/1394
            set +e
            nvm install 8
      - run:
          name: Install Ruby
          command: |
            brew update
            brew install ruby
      # - run:
      #     name: Install Fastlane
      #     command: |
      #       sudo gem install fastlane
      - run:
          name: Install ImageMagick
          command: |
            brew install imagemagick
      - run:
          name: Install global dependencies
          command: |
            sudo npm install -g cordova coffee-script
      - run:
          name: Install NPM modules
          command: |
            rm -rf node_modules
            npm install
      - run:
          name: Create configuration files
          command: |
            echo 'Bugsnag.apiKey = "YOUR-API-KEY-HERE";' > www/js/bugsnag_apikey.js
            echo 'window.ANDROID_SENDER_ID = "YOUR-ANDROID-ID-HERE";' > www/shared/js/android_sender_id.js
      - run:
          name: Cordova configuration
          command: |
            rm -rf platforms
            rm -rf plugins
            rm -rf resources
            cordova prepare ios
            cordova build ios
      # - run:
      #     name: Fastlane build
      #     command: |
      #       export LC_ALL=en_US.UTF-8
      #       export LANG=en_US.UTF-8
      #       # if [[ $MATCH_KEYCHAIN_NAME ]]; then
      #       #   fastlane ios release
      #       # else
      #       fastlane ios build
      #       # fi
  
  android-build:
    <<: *defaults
    docker:
      - image: circleci/android:api-23-alpha
    environment:
      BASH_ENV: "~/.nvm/nvm.sh"
    steps:
      - checkout
      - run:
          name: Install Node 8
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash
            source ~/.nvm/nvm.sh
            nvm install 8
      # - run:
      #     name: Update Fastlane
      #     command: |
      #       brew update
      #       brew install ruby
      #       sudo gem install fastlane
      - run:
          name: Install ImageMagick
          command: |
            sudo apt-get update
            sudo apt-get install imagemagick
      - run:
          name: Install Gradle
          command: |
            export TERM=xterm
            wget https://services.gradle.org/distributions/gradle-2.13-all.zip
            sudo mkdir /opt/gradle
            sudo unzip -d /opt/gradle/ gradle-2.13-all.zip
            # export PATH=$PATH:/opt/gradle/gradle-2.13/bin
            # gradle -v
            mkdir -p /opt/android/sdk/tools/templates/gradle/wrapper
            cd /opt/android/sdk/tools/templates/gradle/wrapper
            /opt/gradle/gradle-2.13/bin/gradle wrapper
            cd ~/repo
            # sudo apt-get install gradle
      - run:
          name: Install global dependencies
          command: |
            npm install -g cordova coffee-script
      - run:
          name: Install NPM modules
          command: |
            rm -rf node_modules
            npm install
      - run:
          name: Create configuration files
          command: |
            echo "Bugsnag.apiKey = '$BUGSNAG_API_KEY';" > www/js/bugsnag_apikey.js
            echo "window.ANDROID_SENDER_ID = '$ANDROID_SENDER_ID';" > www/shared/js/android_sender_id.js
      - run:
          name: Cordova build
          command: |
            rm -rf platforms
            rm -rf plugins
            rm -rf resources
            cordova prepare android

            # if [[ $KEYSTORE ]]; then
              # echo $KEYSTORE_BASE64 | base64 --decode > ./$KEYSTORE
              # cordova build android --release -- --keystore=./$KEYSTORE --storePassword=$KEYSTORE_PASSWORD --alias=$KEY_ALIAS --password=$KEY_PASSWORD
            # else
              cordova build android
            # fi

            mkdir -p /tmp/build
            mv platforms/android/build/outputs/apk /tmp/build/outputs

      - store_artifacts:
          path: /tmp/build/outputs

workflows:
  version: 2
  build:
    jobs:
      # - ios-build
      - android-build